namespace CommonDomain.Core.Generators.Interfaces;

[Generator]
public class Generators : IIncrementalGenerator
{
    private const string Namespace = "Generators.Interfaces";

    private const string Name = "IDateTimeProvider";
    
    private const string DateTimeProviderSourceCode = $@"// <auto-generated/>
using System;

namespace {Namespace};

public partial interface IDateTimeProvider
{{
    DateTime UtcNow {{ get; }}
}}";
    
    private const string DomainEventSourceCode = $@"// <auto-generated/>
namespace {Namespace};

public partial interface IDomainEvent {{ /* Marker interface, might have Timestamp etc. */ }}";

    public void Initialize(IncrementalGeneratorInitializationContext context)
    {
        // Add the marker attribute to the compilation.
        context.RegisterPostInitializationOutput(ctx => ctx.AddSource(
            $"IDateTimeProvider.g.cs",
            SourceText.From(DateTimeProviderSourceCode, Encoding.UTF8)));
        context.RegisterPostInitializationOutput(ctx => ctx.AddSource(
            $"IDomainEvent.g.cs",
            SourceText.From(DomainEventSourceCode, Encoding.UTF8)));
    }
}