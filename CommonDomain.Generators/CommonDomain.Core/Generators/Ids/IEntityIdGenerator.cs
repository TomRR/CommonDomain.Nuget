namespace CommonDomain.Core.Generators.Ids;

[Generator]
public class EntityIdGenerator : IIncrementalGenerator
{
    private const string Namespace = "Generators.Domain.Common";

    private const string Name = "IEntityId";
    
    private const string SourceCode = $@"// <auto-generated/>
using System;

namespace {Namespace};

public interface IEntityId<TId> where TId : IEntityId<TId>
{{
    Guid Value {{ get; }}
    public static abstract TId CreateUniqueId();
    public static abstract TId Create(Guid value);
    public override string ToString() => Value.ToString();
}}";

    public void Initialize(IncrementalGeneratorInitializationContext context)
    {
        // Add the marker attribute to the compilation.
        context.RegisterPostInitializationOutput(ctx => ctx.AddSource(
            $"{Name}.g.cs",
            SourceText.From(SourceCode, Encoding.UTF8)));
    }
}